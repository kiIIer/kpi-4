
ADC_6_0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  000005ac  00000640  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800076  00800076  00000656  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000656  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000688  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000006c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006ac  00000000  00000000  000006f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005d5  00000000  00000000  00000da0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002d2  00000000  00000000  00001375  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d4  00000000  00000000  00001648  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000356  00000000  00000000  0000171c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000196  00000000  00000000  00001a72  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001c08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 9e 00 	jmp	0x13c	; 0x13c <__vector_5>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__vector_16>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ea       	ldi	r30, 0xAC	; 172
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e7       	ldi	r26, 0x76	; 118
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a9 37       	cpi	r26, 0x79	; 121
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 d4 02 	jmp	0x5a8	; 0x5a8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
volatile unsigned int ADC_value;
// ???? 1 - ????????????? ????????
int main (void)
{
    // ???? 1.1 - ????????? ?????? ?????????????? ???????????
    DDRC = 0xFF;
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	84 bb       	out	0x14, r24	; 20
    PORTC = 0x00;
  96:	15 ba       	out	0x15, r1	; 21
    DDRD = 0xFF;
  98:	81 bb       	out	0x11, r24	; 17
    PORTD = 0x00;
  9a:	12 ba       	out	0x12, r1	; 18

    // ???? 1.2 - ???????????? ??????? 2
    TIMSK |= (1 << TOIE2); // ?????? ??????????? ?? ??????? 2
  9c:	89 b7       	in	r24, 0x39	; 57
  9e:	80 64       	ori	r24, 0x40	; 64
  a0:	89 bf       	out	0x39, r24	; 57
    TCCR2 |= (1 << CS21);  // ???????????? ?? 8
  a2:	85 b5       	in	r24, 0x25	; 37
  a4:	82 60       	ori	r24, 0x02	; 2
  a6:	85 bd       	out	0x25, r24	; 37

    // ???? 1.3 - ???????????? ???
    ADCSRA |= (1 << ADEN) // ?????? ???
  a8:	86 b1       	in	r24, 0x06	; 6
  aa:	8e 6e       	ori	r24, 0xEE	; 238
  ac:	86 b9       	out	0x06, r24	; 6
    |(1 << ADSC) // ?????? ????????????
    |(1 << ADATE) // ??????????? ????? ?????? ???
    |(1 << ADPS2)|(1 << ADPS1) // ???????????? ?? 64
    |(1 << ADIE); // ?????? ?????????? ??? ???

    ADMUX &= (~(1 << REFS1))&(~(1 << REFS0)); // ???????? ???
  ae:	87 b1       	in	r24, 0x07	; 7
  b0:	8f 73       	andi	r24, 0x3F	; 63
  b2:	87 b9       	out	0x07, r24	; 7
    
    // ???? 1.4 - ?????????? ?????? ??????????
    sei();
  b4:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b6:	83 ed       	ldi	r24, 0xD3	; 211
  b8:	90 e3       	ldi	r25, 0x30	; 48
  ba:	01 97       	sbiw	r24, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <main+0x28>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x2e>
  c0:	00 00       	nop
  c2:	f9 cf       	rjmp	.-14     	; 0xb6 <main+0x24>

000000c4 <__vector_16>:
    }
}

// ???? 2 - ????? ??????????? ??? ???
ISR (ADC_vect)
{// ???? 3 - ???????? ??????????? ??? ???
  c4:	1f 92       	push	r1
  c6:	0f 92       	push	r0
  c8:	0f b6       	in	r0, 0x3f	; 63
  ca:	0f 92       	push	r0
  cc:	11 24       	eor	r1, r1
  ce:	2f 93       	push	r18
  d0:	3f 93       	push	r19
  d2:	4f 93       	push	r20
  d4:	5f 93       	push	r21
  d6:	6f 93       	push	r22
  d8:	7f 93       	push	r23
  da:	8f 93       	push	r24
  dc:	9f 93       	push	r25
  de:	af 93       	push	r26
  e0:	bf 93       	push	r27
  e2:	ef 93       	push	r30
  e4:	ff 93       	push	r31
	display = (ADC+1)*(5/1024.0)*100;
  e6:	64 b1       	in	r22, 0x04	; 4
  e8:	75 b1       	in	r23, 0x05	; 5
  ea:	6f 5f       	subi	r22, 0xFF	; 255
  ec:	7f 4f       	sbci	r23, 0xFF	; 255
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	0e 94 ca 01 	call	0x394	; 0x394 <__floatunsisf>
  f6:	20 e0       	ldi	r18, 0x00	; 0
  f8:	30 e0       	ldi	r19, 0x00	; 0
  fa:	40 ea       	ldi	r20, 0xA0	; 160
  fc:	5b e3       	ldi	r21, 0x3B	; 59
  fe:	0e 94 30 02 	call	0x460	; 0x460 <__mulsf3>
 102:	20 e0       	ldi	r18, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	48 ec       	ldi	r20, 0xC8	; 200
 108:	52 e4       	ldi	r21, 0x42	; 66
 10a:	0e 94 30 02 	call	0x460	; 0x460 <__mulsf3>
 10e:	0e 94 9b 01 	call	0x336	; 0x336 <__fixunssfsi>
 112:	70 93 77 00 	sts	0x0077, r23	; 0x800077 <__data_end+0x1>
 116:	60 93 76 00 	sts	0x0076, r22	; 0x800076 <__data_end>
}
 11a:	ff 91       	pop	r31
 11c:	ef 91       	pop	r30
 11e:	bf 91       	pop	r27
 120:	af 91       	pop	r26
 122:	9f 91       	pop	r25
 124:	8f 91       	pop	r24
 126:	7f 91       	pop	r23
 128:	6f 91       	pop	r22
 12a:	5f 91       	pop	r21
 12c:	4f 91       	pop	r20
 12e:	3f 91       	pop	r19
 130:	2f 91       	pop	r18
 132:	0f 90       	pop	r0
 134:	0f be       	out	0x3f, r0	; 63
 136:	0f 90       	pop	r0
 138:	1f 90       	pop	r1
 13a:	18 95       	reti

0000013c <__vector_5>:

// ???? 4 - ????? ??????????? ??? ??????? ?2
ISR (TIMER2_OVF_vect)
{// ???? 5 - ???????? ?????????? ??? ??????? ?2
 13c:	1f 92       	push	r1
 13e:	0f 92       	push	r0
 140:	0f b6       	in	r0, 0x3f	; 63
 142:	0f 92       	push	r0
 144:	11 24       	eor	r1, r1
 146:	2f 93       	push	r18
 148:	3f 93       	push	r19
 14a:	4f 93       	push	r20
 14c:	5f 93       	push	r21
 14e:	6f 93       	push	r22
 150:	7f 93       	push	r23
 152:	8f 93       	push	r24
 154:	9f 93       	push	r25
 156:	af 93       	push	r26
 158:	bf 93       	push	r27
 15a:	ef 93       	push	r30
 15c:	ff 93       	push	r31
    PORTD = 0xFF; // ????????? ??? ????????
 15e:	8f ef       	ldi	r24, 0xFF	; 255
 160:	82 bb       	out	0x12, r24	; 18
    PORTC = (1 << current_indicator); // ???????? ???????? ?????????
 162:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <current_indicator>
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 c0       	rjmp	.+4      	; 0x170 <__vector_5+0x34>
 16c:	88 0f       	add	r24, r24
 16e:	99 1f       	adc	r25, r25
 170:	2a 95       	dec	r18
 172:	e2 f7       	brpl	.-8      	; 0x16c <__vector_5+0x30>
 174:	85 bb       	out	0x15, r24	; 21
    switch (current_indicator)
 176:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <current_indicator>
 17a:	81 30       	cpi	r24, 0x01	; 1
 17c:	09 f4       	brne	.+2      	; 0x180 <__vector_5+0x44>
 17e:	41 c0       	rjmp	.+130    	; 0x202 <__vector_5+0xc6>
 180:	38 f0       	brcs	.+14     	; 0x190 <__vector_5+0x54>
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	09 f4       	brne	.+2      	; 0x188 <__vector_5+0x4c>
 186:	70 c0       	rjmp	.+224    	; 0x268 <__vector_5+0x12c>
 188:	83 30       	cpi	r24, 0x03	; 3
 18a:	09 f4       	brne	.+2      	; 0x18e <__vector_5+0x52>
 18c:	97 c0       	rjmp	.+302    	; 0x2bc <__vector_5+0x180>
 18e:	b8 c0       	rjmp	.+368    	; 0x300 <__vector_5+0x1c4>
    {
        case 0:
        PORTD = ~(SEG[display % 10000 / 1000]); // ???????? ????? ????????
 190:	40 91 76 00 	lds	r20, 0x0076	; 0x800076 <__data_end>
 194:	50 91 77 00 	lds	r21, 0x0077	; 0x800077 <__data_end+0x1>
 198:	9a 01       	movw	r18, r20
 19a:	32 95       	swap	r19
 19c:	22 95       	swap	r18
 19e:	2f 70       	andi	r18, 0x0F	; 15
 1a0:	23 27       	eor	r18, r19
 1a2:	3f 70       	andi	r19, 0x0F	; 15
 1a4:	23 27       	eor	r18, r19
 1a6:	a7 e4       	ldi	r26, 0x47	; 71
 1a8:	b3 e0       	ldi	r27, 0x03	; 3
 1aa:	0e 94 c5 02 	call	0x58a	; 0x58a <__umulhisi3>
 1ae:	96 95       	lsr	r25
 1b0:	87 95       	ror	r24
 1b2:	96 95       	lsr	r25
 1b4:	87 95       	ror	r24
 1b6:	96 95       	lsr	r25
 1b8:	87 95       	ror	r24
 1ba:	60 e1       	ldi	r22, 0x10	; 16
 1bc:	77 e2       	ldi	r23, 0x27	; 39
 1be:	86 9f       	mul	r24, r22
 1c0:	90 01       	movw	r18, r0
 1c2:	87 9f       	mul	r24, r23
 1c4:	30 0d       	add	r19, r0
 1c6:	96 9f       	mul	r25, r22
 1c8:	30 0d       	add	r19, r0
 1ca:	11 24       	eor	r1, r1
 1cc:	ca 01       	movw	r24, r20
 1ce:	82 1b       	sub	r24, r18
 1d0:	93 0b       	sbc	r25, r19
 1d2:	9c 01       	movw	r18, r24
 1d4:	36 95       	lsr	r19
 1d6:	27 95       	ror	r18
 1d8:	36 95       	lsr	r19
 1da:	27 95       	ror	r18
 1dc:	36 95       	lsr	r19
 1de:	27 95       	ror	r18
 1e0:	a5 ec       	ldi	r26, 0xC5	; 197
 1e2:	b0 e2       	ldi	r27, 0x20	; 32
 1e4:	0e 94 c5 02 	call	0x58a	; 0x58a <__umulhisi3>
 1e8:	92 95       	swap	r25
 1ea:	82 95       	swap	r24
 1ec:	8f 70       	andi	r24, 0x0F	; 15
 1ee:	89 27       	eor	r24, r25
 1f0:	9f 70       	andi	r25, 0x0F	; 15
 1f2:	89 27       	eor	r24, r25
 1f4:	fc 01       	movw	r30, r24
 1f6:	e5 59       	subi	r30, 0x95	; 149
 1f8:	ff 4f       	sbci	r31, 0xFF	; 255
 1fa:	80 81       	ld	r24, Z
 1fc:	80 95       	com	r24
 1fe:	82 bb       	out	0x12, r24	; 18
        break;
 200:	7f c0       	rjmp	.+254    	; 0x300 <__vector_5+0x1c4>
        case 1:
        PORTD = ~(SEG_with_dot[display % 1000 / 100]); // ???????? ????? ??????? ?? ??????
 202:	40 91 76 00 	lds	r20, 0x0076	; 0x800076 <__data_end>
 206:	50 91 77 00 	lds	r21, 0x0077	; 0x800077 <__data_end+0x1>
 20a:	9a 01       	movw	r18, r20
 20c:	36 95       	lsr	r19
 20e:	27 95       	ror	r18
 210:	36 95       	lsr	r19
 212:	27 95       	ror	r18
 214:	36 95       	lsr	r19
 216:	27 95       	ror	r18
 218:	a5 ec       	ldi	r26, 0xC5	; 197
 21a:	b0 e2       	ldi	r27, 0x20	; 32
 21c:	0e 94 c5 02 	call	0x58a	; 0x58a <__umulhisi3>
 220:	92 95       	swap	r25
 222:	82 95       	swap	r24
 224:	8f 70       	andi	r24, 0x0F	; 15
 226:	89 27       	eor	r24, r25
 228:	9f 70       	andi	r25, 0x0F	; 15
 22a:	89 27       	eor	r24, r25
 22c:	68 ee       	ldi	r22, 0xE8	; 232
 22e:	73 e0       	ldi	r23, 0x03	; 3
 230:	86 9f       	mul	r24, r22
 232:	90 01       	movw	r18, r0
 234:	87 9f       	mul	r24, r23
 236:	30 0d       	add	r19, r0
 238:	96 9f       	mul	r25, r22
 23a:	30 0d       	add	r19, r0
 23c:	11 24       	eor	r1, r1
 23e:	ca 01       	movw	r24, r20
 240:	82 1b       	sub	r24, r18
 242:	93 0b       	sbc	r25, r19
 244:	9c 01       	movw	r18, r24
 246:	36 95       	lsr	r19
 248:	27 95       	ror	r18
 24a:	36 95       	lsr	r19
 24c:	27 95       	ror	r18
 24e:	ab e7       	ldi	r26, 0x7B	; 123
 250:	b4 e1       	ldi	r27, 0x14	; 20
 252:	0e 94 c5 02 	call	0x58a	; 0x58a <__umulhisi3>
 256:	96 95       	lsr	r25
 258:	87 95       	ror	r24
 25a:	fc 01       	movw	r30, r24
 25c:	e0 5a       	subi	r30, 0xA0	; 160
 25e:	ff 4f       	sbci	r31, 0xFF	; 255
 260:	80 81       	ld	r24, Z
 262:	80 95       	com	r24
 264:	82 bb       	out	0x12, r24	; 18
        break;
 266:	4c c0       	rjmp	.+152    	; 0x300 <__vector_5+0x1c4>
        case 2:
        PORTD = ~(SEG[display % 100/10]); // ???????? ????? ???????
 268:	40 91 76 00 	lds	r20, 0x0076	; 0x800076 <__data_end>
 26c:	50 91 77 00 	lds	r21, 0x0077	; 0x800077 <__data_end+0x1>
 270:	9a 01       	movw	r18, r20
 272:	36 95       	lsr	r19
 274:	27 95       	ror	r18
 276:	36 95       	lsr	r19
 278:	27 95       	ror	r18
 27a:	ab e7       	ldi	r26, 0x7B	; 123
 27c:	b4 e1       	ldi	r27, 0x14	; 20
 27e:	0e 94 c5 02 	call	0x58a	; 0x58a <__umulhisi3>
 282:	96 95       	lsr	r25
 284:	87 95       	ror	r24
 286:	64 e6       	ldi	r22, 0x64	; 100
 288:	68 9f       	mul	r22, r24
 28a:	90 01       	movw	r18, r0
 28c:	69 9f       	mul	r22, r25
 28e:	30 0d       	add	r19, r0
 290:	11 24       	eor	r1, r1
 292:	ca 01       	movw	r24, r20
 294:	82 1b       	sub	r24, r18
 296:	93 0b       	sbc	r25, r19
 298:	9c 01       	movw	r18, r24
 29a:	ad ec       	ldi	r26, 0xCD	; 205
 29c:	bc ec       	ldi	r27, 0xCC	; 204
 29e:	0e 94 c5 02 	call	0x58a	; 0x58a <__umulhisi3>
 2a2:	96 95       	lsr	r25
 2a4:	87 95       	ror	r24
 2a6:	96 95       	lsr	r25
 2a8:	87 95       	ror	r24
 2aa:	96 95       	lsr	r25
 2ac:	87 95       	ror	r24
 2ae:	fc 01       	movw	r30, r24
 2b0:	e5 59       	subi	r30, 0x95	; 149
 2b2:	ff 4f       	sbci	r31, 0xFF	; 255
 2b4:	80 81       	ld	r24, Z
 2b6:	80 95       	com	r24
 2b8:	82 bb       	out	0x12, r24	; 18
        break;
 2ba:	22 c0       	rjmp	.+68     	; 0x300 <__vector_5+0x1c4>
        case 3:
        PORTD = ~(SEG[display % 10]); // ???????? ????? ?????
 2bc:	40 91 76 00 	lds	r20, 0x0076	; 0x800076 <__data_end>
 2c0:	50 91 77 00 	lds	r21, 0x0077	; 0x800077 <__data_end+0x1>
 2c4:	9a 01       	movw	r18, r20
 2c6:	ad ec       	ldi	r26, 0xCD	; 205
 2c8:	bc ec       	ldi	r27, 0xCC	; 204
 2ca:	0e 94 c5 02 	call	0x58a	; 0x58a <__umulhisi3>
 2ce:	96 95       	lsr	r25
 2d0:	87 95       	ror	r24
 2d2:	96 95       	lsr	r25
 2d4:	87 95       	ror	r24
 2d6:	96 95       	lsr	r25
 2d8:	87 95       	ror	r24
 2da:	9c 01       	movw	r18, r24
 2dc:	22 0f       	add	r18, r18
 2de:	33 1f       	adc	r19, r19
 2e0:	88 0f       	add	r24, r24
 2e2:	99 1f       	adc	r25, r25
 2e4:	88 0f       	add	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	82 0f       	add	r24, r18
 2ee:	93 1f       	adc	r25, r19
 2f0:	48 1b       	sub	r20, r24
 2f2:	59 0b       	sbc	r21, r25
 2f4:	fa 01       	movw	r30, r20
 2f6:	e5 59       	subi	r30, 0x95	; 149
 2f8:	ff 4f       	sbci	r31, 0xFF	; 255
 2fa:	80 81       	ld	r24, Z
 2fc:	80 95       	com	r24
 2fe:	82 bb       	out	0x12, r24	; 18
        break;
    }
    if ((current_indicator++) > 2) // ?????????? ?? ????????? ?????????
 300:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <current_indicator>
 304:	91 e0       	ldi	r25, 0x01	; 1
 306:	98 0f       	add	r25, r24
 308:	90 93 78 00 	sts	0x0078, r25	; 0x800078 <current_indicator>
 30c:	83 30       	cpi	r24, 0x03	; 3
 30e:	10 f0       	brcs	.+4      	; 0x314 <__vector_5+0x1d8>
        current_indicator = 0; // ?????????, ???? ??? ?? ??????
 310:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <current_indicator>
}
 314:	ff 91       	pop	r31
 316:	ef 91       	pop	r30
 318:	bf 91       	pop	r27
 31a:	af 91       	pop	r26
 31c:	9f 91       	pop	r25
 31e:	8f 91       	pop	r24
 320:	7f 91       	pop	r23
 322:	6f 91       	pop	r22
 324:	5f 91       	pop	r21
 326:	4f 91       	pop	r20
 328:	3f 91       	pop	r19
 32a:	2f 91       	pop	r18
 32c:	0f 90       	pop	r0
 32e:	0f be       	out	0x3f, r0	; 63
 330:	0f 90       	pop	r0
 332:	1f 90       	pop	r1
 334:	18 95       	reti

00000336 <__fixunssfsi>:
 336:	0e 94 0f 02 	call	0x41e	; 0x41e <__fp_splitA>
 33a:	88 f0       	brcs	.+34     	; 0x35e <__fixunssfsi+0x28>
 33c:	9f 57       	subi	r25, 0x7F	; 127
 33e:	98 f0       	brcs	.+38     	; 0x366 <__fixunssfsi+0x30>
 340:	b9 2f       	mov	r27, r25
 342:	99 27       	eor	r25, r25
 344:	b7 51       	subi	r27, 0x17	; 23
 346:	b0 f0       	brcs	.+44     	; 0x374 <__fixunssfsi+0x3e>
 348:	e1 f0       	breq	.+56     	; 0x382 <__fixunssfsi+0x4c>
 34a:	66 0f       	add	r22, r22
 34c:	77 1f       	adc	r23, r23
 34e:	88 1f       	adc	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	1a f0       	brmi	.+6      	; 0x35a <__fixunssfsi+0x24>
 354:	ba 95       	dec	r27
 356:	c9 f7       	brne	.-14     	; 0x34a <__fixunssfsi+0x14>
 358:	14 c0       	rjmp	.+40     	; 0x382 <__fixunssfsi+0x4c>
 35a:	b1 30       	cpi	r27, 0x01	; 1
 35c:	91 f0       	breq	.+36     	; 0x382 <__fixunssfsi+0x4c>
 35e:	0e 94 29 02 	call	0x452	; 0x452 <__fp_zero>
 362:	b1 e0       	ldi	r27, 0x01	; 1
 364:	08 95       	ret
 366:	0c 94 29 02 	jmp	0x452	; 0x452 <__fp_zero>
 36a:	67 2f       	mov	r22, r23
 36c:	78 2f       	mov	r23, r24
 36e:	88 27       	eor	r24, r24
 370:	b8 5f       	subi	r27, 0xF8	; 248
 372:	39 f0       	breq	.+14     	; 0x382 <__fixunssfsi+0x4c>
 374:	b9 3f       	cpi	r27, 0xF9	; 249
 376:	cc f3       	brlt	.-14     	; 0x36a <__fixunssfsi+0x34>
 378:	86 95       	lsr	r24
 37a:	77 95       	ror	r23
 37c:	67 95       	ror	r22
 37e:	b3 95       	inc	r27
 380:	d9 f7       	brne	.-10     	; 0x378 <__fixunssfsi+0x42>
 382:	3e f4       	brtc	.+14     	; 0x392 <__fixunssfsi+0x5c>
 384:	90 95       	com	r25
 386:	80 95       	com	r24
 388:	70 95       	com	r23
 38a:	61 95       	neg	r22
 38c:	7f 4f       	sbci	r23, 0xFF	; 255
 38e:	8f 4f       	sbci	r24, 0xFF	; 255
 390:	9f 4f       	sbci	r25, 0xFF	; 255
 392:	08 95       	ret

00000394 <__floatunsisf>:
 394:	e8 94       	clt
 396:	09 c0       	rjmp	.+18     	; 0x3aa <__floatsisf+0x12>

00000398 <__floatsisf>:
 398:	97 fb       	bst	r25, 7
 39a:	3e f4       	brtc	.+14     	; 0x3aa <__floatsisf+0x12>
 39c:	90 95       	com	r25
 39e:	80 95       	com	r24
 3a0:	70 95       	com	r23
 3a2:	61 95       	neg	r22
 3a4:	7f 4f       	sbci	r23, 0xFF	; 255
 3a6:	8f 4f       	sbci	r24, 0xFF	; 255
 3a8:	9f 4f       	sbci	r25, 0xFF	; 255
 3aa:	99 23       	and	r25, r25
 3ac:	a9 f0       	breq	.+42     	; 0x3d8 <__floatsisf+0x40>
 3ae:	f9 2f       	mov	r31, r25
 3b0:	96 e9       	ldi	r25, 0x96	; 150
 3b2:	bb 27       	eor	r27, r27
 3b4:	93 95       	inc	r25
 3b6:	f6 95       	lsr	r31
 3b8:	87 95       	ror	r24
 3ba:	77 95       	ror	r23
 3bc:	67 95       	ror	r22
 3be:	b7 95       	ror	r27
 3c0:	f1 11       	cpse	r31, r1
 3c2:	f8 cf       	rjmp	.-16     	; 0x3b4 <__floatsisf+0x1c>
 3c4:	fa f4       	brpl	.+62     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3c6:	bb 0f       	add	r27, r27
 3c8:	11 f4       	brne	.+4      	; 0x3ce <__floatsisf+0x36>
 3ca:	60 ff       	sbrs	r22, 0
 3cc:	1b c0       	rjmp	.+54     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3ce:	6f 5f       	subi	r22, 0xFF	; 255
 3d0:	7f 4f       	sbci	r23, 0xFF	; 255
 3d2:	8f 4f       	sbci	r24, 0xFF	; 255
 3d4:	9f 4f       	sbci	r25, 0xFF	; 255
 3d6:	16 c0       	rjmp	.+44     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3d8:	88 23       	and	r24, r24
 3da:	11 f0       	breq	.+4      	; 0x3e0 <__floatsisf+0x48>
 3dc:	96 e9       	ldi	r25, 0x96	; 150
 3de:	11 c0       	rjmp	.+34     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e0:	77 23       	and	r23, r23
 3e2:	21 f0       	breq	.+8      	; 0x3ec <__floatsisf+0x54>
 3e4:	9e e8       	ldi	r25, 0x8E	; 142
 3e6:	87 2f       	mov	r24, r23
 3e8:	76 2f       	mov	r23, r22
 3ea:	05 c0       	rjmp	.+10     	; 0x3f6 <__floatsisf+0x5e>
 3ec:	66 23       	and	r22, r22
 3ee:	71 f0       	breq	.+28     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3f0:	96 e8       	ldi	r25, 0x86	; 134
 3f2:	86 2f       	mov	r24, r22
 3f4:	70 e0       	ldi	r23, 0x00	; 0
 3f6:	60 e0       	ldi	r22, 0x00	; 0
 3f8:	2a f0       	brmi	.+10     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fa:	9a 95       	dec	r25
 3fc:	66 0f       	add	r22, r22
 3fe:	77 1f       	adc	r23, r23
 400:	88 1f       	adc	r24, r24
 402:	da f7       	brpl	.-10     	; 0x3fa <__floatsisf+0x62>
 404:	88 0f       	add	r24, r24
 406:	96 95       	lsr	r25
 408:	87 95       	ror	r24
 40a:	97 f9       	bld	r25, 7
 40c:	08 95       	ret

0000040e <__fp_split3>:
 40e:	57 fd       	sbrc	r21, 7
 410:	90 58       	subi	r25, 0x80	; 128
 412:	44 0f       	add	r20, r20
 414:	55 1f       	adc	r21, r21
 416:	59 f0       	breq	.+22     	; 0x42e <__fp_splitA+0x10>
 418:	5f 3f       	cpi	r21, 0xFF	; 255
 41a:	71 f0       	breq	.+28     	; 0x438 <__fp_splitA+0x1a>
 41c:	47 95       	ror	r20

0000041e <__fp_splitA>:
 41e:	88 0f       	add	r24, r24
 420:	97 fb       	bst	r25, 7
 422:	99 1f       	adc	r25, r25
 424:	61 f0       	breq	.+24     	; 0x43e <__fp_splitA+0x20>
 426:	9f 3f       	cpi	r25, 0xFF	; 255
 428:	79 f0       	breq	.+30     	; 0x448 <__fp_splitA+0x2a>
 42a:	87 95       	ror	r24
 42c:	08 95       	ret
 42e:	12 16       	cp	r1, r18
 430:	13 06       	cpc	r1, r19
 432:	14 06       	cpc	r1, r20
 434:	55 1f       	adc	r21, r21
 436:	f2 cf       	rjmp	.-28     	; 0x41c <__fp_split3+0xe>
 438:	46 95       	lsr	r20
 43a:	f1 df       	rcall	.-30     	; 0x41e <__fp_splitA>
 43c:	08 c0       	rjmp	.+16     	; 0x44e <__fp_splitA+0x30>
 43e:	16 16       	cp	r1, r22
 440:	17 06       	cpc	r1, r23
 442:	18 06       	cpc	r1, r24
 444:	99 1f       	adc	r25, r25
 446:	f1 cf       	rjmp	.-30     	; 0x42a <__fp_splitA+0xc>
 448:	86 95       	lsr	r24
 44a:	71 05       	cpc	r23, r1
 44c:	61 05       	cpc	r22, r1
 44e:	08 94       	sec
 450:	08 95       	ret

00000452 <__fp_zero>:
 452:	e8 94       	clt

00000454 <__fp_szero>:
 454:	bb 27       	eor	r27, r27
 456:	66 27       	eor	r22, r22
 458:	77 27       	eor	r23, r23
 45a:	cb 01       	movw	r24, r22
 45c:	97 f9       	bld	r25, 7
 45e:	08 95       	ret

00000460 <__mulsf3>:
 460:	0e 94 43 02 	call	0x486	; 0x486 <__mulsf3x>
 464:	0c 94 b4 02 	jmp	0x568	; 0x568 <__fp_round>
 468:	0e 94 a6 02 	call	0x54c	; 0x54c <__fp_pscA>
 46c:	38 f0       	brcs	.+14     	; 0x47c <__mulsf3+0x1c>
 46e:	0e 94 ad 02 	call	0x55a	; 0x55a <__fp_pscB>
 472:	20 f0       	brcs	.+8      	; 0x47c <__mulsf3+0x1c>
 474:	95 23       	and	r25, r21
 476:	11 f0       	breq	.+4      	; 0x47c <__mulsf3+0x1c>
 478:	0c 94 9d 02 	jmp	0x53a	; 0x53a <__fp_inf>
 47c:	0c 94 a3 02 	jmp	0x546	; 0x546 <__fp_nan>
 480:	11 24       	eor	r1, r1
 482:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_szero>

00000486 <__mulsf3x>:
 486:	0e 94 07 02 	call	0x40e	; 0x40e <__fp_split3>
 48a:	70 f3       	brcs	.-36     	; 0x468 <__mulsf3+0x8>

0000048c <__mulsf3_pse>:
 48c:	95 9f       	mul	r25, r21
 48e:	c1 f3       	breq	.-16     	; 0x480 <__mulsf3+0x20>
 490:	95 0f       	add	r25, r21
 492:	50 e0       	ldi	r21, 0x00	; 0
 494:	55 1f       	adc	r21, r21
 496:	62 9f       	mul	r22, r18
 498:	f0 01       	movw	r30, r0
 49a:	72 9f       	mul	r23, r18
 49c:	bb 27       	eor	r27, r27
 49e:	f0 0d       	add	r31, r0
 4a0:	b1 1d       	adc	r27, r1
 4a2:	63 9f       	mul	r22, r19
 4a4:	aa 27       	eor	r26, r26
 4a6:	f0 0d       	add	r31, r0
 4a8:	b1 1d       	adc	r27, r1
 4aa:	aa 1f       	adc	r26, r26
 4ac:	64 9f       	mul	r22, r20
 4ae:	66 27       	eor	r22, r22
 4b0:	b0 0d       	add	r27, r0
 4b2:	a1 1d       	adc	r26, r1
 4b4:	66 1f       	adc	r22, r22
 4b6:	82 9f       	mul	r24, r18
 4b8:	22 27       	eor	r18, r18
 4ba:	b0 0d       	add	r27, r0
 4bc:	a1 1d       	adc	r26, r1
 4be:	62 1f       	adc	r22, r18
 4c0:	73 9f       	mul	r23, r19
 4c2:	b0 0d       	add	r27, r0
 4c4:	a1 1d       	adc	r26, r1
 4c6:	62 1f       	adc	r22, r18
 4c8:	83 9f       	mul	r24, r19
 4ca:	a0 0d       	add	r26, r0
 4cc:	61 1d       	adc	r22, r1
 4ce:	22 1f       	adc	r18, r18
 4d0:	74 9f       	mul	r23, r20
 4d2:	33 27       	eor	r19, r19
 4d4:	a0 0d       	add	r26, r0
 4d6:	61 1d       	adc	r22, r1
 4d8:	23 1f       	adc	r18, r19
 4da:	84 9f       	mul	r24, r20
 4dc:	60 0d       	add	r22, r0
 4de:	21 1d       	adc	r18, r1
 4e0:	82 2f       	mov	r24, r18
 4e2:	76 2f       	mov	r23, r22
 4e4:	6a 2f       	mov	r22, r26
 4e6:	11 24       	eor	r1, r1
 4e8:	9f 57       	subi	r25, 0x7F	; 127
 4ea:	50 40       	sbci	r21, 0x00	; 0
 4ec:	9a f0       	brmi	.+38     	; 0x514 <__mulsf3_pse+0x88>
 4ee:	f1 f0       	breq	.+60     	; 0x52c <__mulsf3_pse+0xa0>
 4f0:	88 23       	and	r24, r24
 4f2:	4a f0       	brmi	.+18     	; 0x506 <__mulsf3_pse+0x7a>
 4f4:	ee 0f       	add	r30, r30
 4f6:	ff 1f       	adc	r31, r31
 4f8:	bb 1f       	adc	r27, r27
 4fa:	66 1f       	adc	r22, r22
 4fc:	77 1f       	adc	r23, r23
 4fe:	88 1f       	adc	r24, r24
 500:	91 50       	subi	r25, 0x01	; 1
 502:	50 40       	sbci	r21, 0x00	; 0
 504:	a9 f7       	brne	.-22     	; 0x4f0 <__mulsf3_pse+0x64>
 506:	9e 3f       	cpi	r25, 0xFE	; 254
 508:	51 05       	cpc	r21, r1
 50a:	80 f0       	brcs	.+32     	; 0x52c <__mulsf3_pse+0xa0>
 50c:	0c 94 9d 02 	jmp	0x53a	; 0x53a <__fp_inf>
 510:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_szero>
 514:	5f 3f       	cpi	r21, 0xFF	; 255
 516:	e4 f3       	brlt	.-8      	; 0x510 <__mulsf3_pse+0x84>
 518:	98 3e       	cpi	r25, 0xE8	; 232
 51a:	d4 f3       	brlt	.-12     	; 0x510 <__mulsf3_pse+0x84>
 51c:	86 95       	lsr	r24
 51e:	77 95       	ror	r23
 520:	67 95       	ror	r22
 522:	b7 95       	ror	r27
 524:	f7 95       	ror	r31
 526:	e7 95       	ror	r30
 528:	9f 5f       	subi	r25, 0xFF	; 255
 52a:	c1 f7       	brne	.-16     	; 0x51c <__mulsf3_pse+0x90>
 52c:	fe 2b       	or	r31, r30
 52e:	88 0f       	add	r24, r24
 530:	91 1d       	adc	r25, r1
 532:	96 95       	lsr	r25
 534:	87 95       	ror	r24
 536:	97 f9       	bld	r25, 7
 538:	08 95       	ret

0000053a <__fp_inf>:
 53a:	97 f9       	bld	r25, 7
 53c:	9f 67       	ori	r25, 0x7F	; 127
 53e:	80 e8       	ldi	r24, 0x80	; 128
 540:	70 e0       	ldi	r23, 0x00	; 0
 542:	60 e0       	ldi	r22, 0x00	; 0
 544:	08 95       	ret

00000546 <__fp_nan>:
 546:	9f ef       	ldi	r25, 0xFF	; 255
 548:	80 ec       	ldi	r24, 0xC0	; 192
 54a:	08 95       	ret

0000054c <__fp_pscA>:
 54c:	00 24       	eor	r0, r0
 54e:	0a 94       	dec	r0
 550:	16 16       	cp	r1, r22
 552:	17 06       	cpc	r1, r23
 554:	18 06       	cpc	r1, r24
 556:	09 06       	cpc	r0, r25
 558:	08 95       	ret

0000055a <__fp_pscB>:
 55a:	00 24       	eor	r0, r0
 55c:	0a 94       	dec	r0
 55e:	12 16       	cp	r1, r18
 560:	13 06       	cpc	r1, r19
 562:	14 06       	cpc	r1, r20
 564:	05 06       	cpc	r0, r21
 566:	08 95       	ret

00000568 <__fp_round>:
 568:	09 2e       	mov	r0, r25
 56a:	03 94       	inc	r0
 56c:	00 0c       	add	r0, r0
 56e:	11 f4       	brne	.+4      	; 0x574 <__fp_round+0xc>
 570:	88 23       	and	r24, r24
 572:	52 f0       	brmi	.+20     	; 0x588 <__fp_round+0x20>
 574:	bb 0f       	add	r27, r27
 576:	40 f4       	brcc	.+16     	; 0x588 <__fp_round+0x20>
 578:	bf 2b       	or	r27, r31
 57a:	11 f4       	brne	.+4      	; 0x580 <__fp_round+0x18>
 57c:	60 ff       	sbrs	r22, 0
 57e:	04 c0       	rjmp	.+8      	; 0x588 <__fp_round+0x20>
 580:	6f 5f       	subi	r22, 0xFF	; 255
 582:	7f 4f       	sbci	r23, 0xFF	; 255
 584:	8f 4f       	sbci	r24, 0xFF	; 255
 586:	9f 4f       	sbci	r25, 0xFF	; 255
 588:	08 95       	ret

0000058a <__umulhisi3>:
 58a:	a2 9f       	mul	r26, r18
 58c:	b0 01       	movw	r22, r0
 58e:	b3 9f       	mul	r27, r19
 590:	c0 01       	movw	r24, r0
 592:	a3 9f       	mul	r26, r19
 594:	70 0d       	add	r23, r0
 596:	81 1d       	adc	r24, r1
 598:	11 24       	eor	r1, r1
 59a:	91 1d       	adc	r25, r1
 59c:	b2 9f       	mul	r27, r18
 59e:	70 0d       	add	r23, r0
 5a0:	81 1d       	adc	r24, r1
 5a2:	11 24       	eor	r1, r1
 5a4:	91 1d       	adc	r25, r1
 5a6:	08 95       	ret

000005a8 <_exit>:
 5a8:	f8 94       	cli

000005aa <__stop_program>:
 5aa:	ff cf       	rjmp	.-2      	; 0x5aa <__stop_program>
